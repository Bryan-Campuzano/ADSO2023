Build1=Default,b4a.example
File1=0.png
File10=9.png
File11=borrar.png
File12=dividir.png
File13=historial.png
File14=igual.png
File15=Layout.bal
File16=multiplicar.png
File17=pi.png
File18=punto.png
File19=raiz.png
File2=1.png
File20=restar.png
File21=sumar.png
File3=2.png
File4=3.png
File5=4.png
File6=5.png
File7=6.png
File8=7.png
File9=8.png
FileGroup1=Default Group
FileGroup10=Default Group
FileGroup11=Default Group
FileGroup12=Default Group
FileGroup13=Default Group
FileGroup14=Default Group
FileGroup15=Default Group
FileGroup16=Default Group
FileGroup17=Default Group
FileGroup18=Default Group
FileGroup19=Default Group
FileGroup2=Default Group
FileGroup20=Default Group
FileGroup21=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
FileGroup7=Default Group
FileGroup8=Default Group
FileGroup9=Default Group
Group=Default Group
Library1=core
Library2=xui
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="21" android:targetSdkVersion="33"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~
Module1=B4xPages
Module2=Starter
NumberOfFiles=21
NumberOfLibraries=2
NumberOfModules=2
Version=12.5
@EndOfDesignText@
#Region Project Attributes
    #ApplicationLabel: B4A Calculator
    #VersionCode: 1
    #VersionName:
    'SupportedOrientations possible values: unspecified, landscape or portrait.
    #SupportedOrientations: unspecified
    #CanInstallToExternalStorage: False
#End Region

#Region Activity Attributes
    #FullScreen: False
    #IncludeTitle: False
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Private xui As XUI
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	Private EditText1 As EditText
	Private ButtonBorrar As Button
	Private ButtonPi As Button
	Private ButtonRaiz As Button
	Private ButtonSuma As Button
	Private Button9 As Button
	Private Button8 As Button
	Private Button7 As Button
	Private ButtonResta As Button
	Private Button6 As Button
	Private Button5 As Button
	Private Button4 As Button
	Private ButtonMultiplicacion As Button
	Private Button3 As Button
	Private Button2 As Button
	Private Button1 As Button
	Private ButtonDivision As Button
	Private Button0 As Button
	Private ButtonPunto As Button
	Private ButtonIgual As Button
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("Layout")
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Private Sub ButtonBorrar_Click
	' Borrar un solo elemento de la expresión
	If EditText1.Text.Length > 0 Then
		EditText1.Text = EditText1.Text.SubString2(0, EditText1.Text.Length - 1)
	End If
End Sub

Private Sub ButtonBorrar_LongClick
	' Borrar toda la expresión con un click sostenido
	EditText1.Text = ""
End Sub

Private Sub ButtonPi_Click
	' Agregar el valor de PI a la expresión
	EditText1.Text = EditText1.Text & "3.14159265359"
End Sub

Private Sub ButtonRaiz_Click
	' Agregar la función de raíz cuadrada a la expresión
	Dim num As Double
	If IsNumber(EditText1.Text) Then
		num = Sqrt(EditText1.Text)
	End If
	EditText1.Text = num
End Sub

Private Sub ButtonSuma_Click
	' Agregar el operador de suma a la expresión
	EditText1.Text = EditText1.Text & " + "
End Sub

Private Sub ButtonResta_Click
	' Agregar el operador de resta a la expresión
	EditText1.Text = EditText1.Text & " - "
End Sub

Private Sub ButtonMultiplicacion_Click
	' Agregar el operador de multiplicación a la expresión
	EditText1.Text = EditText1.Text & " * "
End Sub

Private Sub ButtonDivision_Click
	' Agregar el operador de división a la expresión
	EditText1.Text = EditText1.Text & " / "
End Sub

Private Sub ButtonIgual_Click
	Dim texto As String
	Dim elementos() As String
	Dim operador As String
	Dim num1, num2, resultado As Double
    
	' Obtener el texto del EditText
	texto = EditText1.Text.Trim
    
	' Separar por comas
	elementos = Regex.Split(" ", texto)
    
	' Verificar que hay al menos dos elementos (número1, operador, número2)
	If elementos.Length >= 3 Then
		' Obtener los números y el operador
		If IsNumber(elementos(0)) Then
			num1 = elementos(0)
		End If
		operador = elementos(1)
		If IsNumber(elementos(2)) Then
			num2 = elementos(2)
		End If
        
		' Realizar la operación según el operador
		Select operador.ToLowerCase
			Case "+"
				resultado = num1 + num2
			Case "-"
				resultado = num1 - num2
			Case "*"
				resultado = num1 * num2
			Case "/"
				' Verificar la división por cero
				If num2 <> 0 Then
					resultado = num1 / num2
				Else
					ToastMessageShow("Error: División por cero", True)
					Return
				End If
			Case Else
				ToastMessageShow("Operador no válido", True)
				Return
		End Select
        
		' Mostrar el resultado
		EditText1.Text = resultado
	Else
		ToastMessageShow("Formato no válido", True)
	End If
End Sub

Private Sub ButtonPunto_Click
	' Agregar el punto decimal a la expresión
	EditText1.Text = EditText1.Text & "."
End Sub

Private Sub Button0_Click
	' Agregar el número 0 a la expresión
	EditText1.Text = EditText1.Text & "0"
End Sub

Private Sub Button1_Click
	' Agregar el número 1 a la expresión
	EditText1.Text = EditText1.Text & "1"
End Sub

Private Sub Button2_Click
	' Agregar el número 2 a la expresión
	EditText1.Text = EditText1.Text & "2"
End Sub

Private Sub Button3_Click
	' Agregar el número 3 a la expresión
	EditText1.Text = EditText1.Text & "3"
End Sub

Private Sub Button4_Click
	' Agregar el número 4 a la expresión
	EditText1.Text = EditText1.Text & "4"
End Sub

Private Sub Button5_Click
	' Agregar el número 5 a la expresión
	EditText1.Text = EditText1.Text & "5"
End Sub

Private Sub Button6_Click
	' Agregar el número 6 a la expresión
	EditText1.Text = EditText1.Text & "6"
End Sub

Private Sub Button7_Click
	' Agregar el número 7 a la expresión
	EditText1.Text = EditText1.Text & "7"
End Sub

Private Sub Button8_Click
	' Agregar el número 8 a la expresión
	EditText1.Text = EditText1.Text & "8"
End Sub

Private Sub Button9_Click
	' Agregar el número 9 a la expresión
	EditText1.Text = EditText1.Text & "9"
End Sub

Private Sub Button_Click(ButtonText As String)
	' Método para manejar los clics de los botones de números y operadores
	EditText1.Text = EditText1.Text & ButtonText
End Sub

